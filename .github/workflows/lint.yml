name: Lint

on: [push, pull_request]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: ['3.11']
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Run black
        uses: psf/black@stable

      - name: Run isort
        uses: isort/isort-action@v1
        with:
          args: --setting-file backend/pyproject.toml
          requirements-files: 'backend/requirements/dev.txt'

      - name: Run Flake8
        run: flake8 .

      - name: Run mypy
        uses: sasanquaneuf/mypy-github-action@releases/v1.3

  lint-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Run Prettier
        id: prettier-run
        uses: rutajdash/prettier-cli-action@v1.0.1
        with:
          config_path: ./.prettierrc.toml

      - name: Prettier Output
        if: ${{ failure() }}
        shell: bash
        run: |
          echo "The following files are not formatted:"
          echo "${{steps.prettier-run.outputs.prettier_output}}"

      - name: Run ESLint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          workdir: frontend
          eslint_flags: 'src/**/*.{ts,tsx}'
          fail_on_error: true
